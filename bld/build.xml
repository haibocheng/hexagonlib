<?xml version="1.0" encoding="UTF-8"?>
<!--
*********************************************************************************************
	Buildfile for SWC files
*********************************************************************************************
-->
<project name="hexagonlib.lite" default="Init" basedir="..">
	
	<!-- application information -->
	<property name="app.name"			value="hexagonlib"/>
	<property name="app.pubname"		value="hexagonlib"/>
	<property name="app.version"		value="0.4.0"/>
	<property name="app.releasestage"	value="beta"/>
	<property name="app.copyright"		value="Copyright(c) Hexagon Star Softworks"/>
	
	<!-- swc properties -->
	<property name="swc.targetname"		value="hexagonlib.swc"/>
	
	<!-- version of the used flex sdk -->
	<property name="sdk.version"		value="4.5.0"/>
	
	<!-- version of the targetted flash player -->
	<property name="fpv.version"		value="10.2.0"/>
	
	<!-- default project folders -->
	<property name="path.src"			value="${basedir}/src/code"/>
	<property name="path.swc"			value="${basedir}/src/swc"/>
	<property name="path.bin"			value="${basedir}/bin"/>
	<property name="path.pub"			value="${basedir}/pub"/>
	
	<!-- workspace & sdk pathes -->
	<property name="workspace"			value="${eclipse.workspace}"/>
	<property name="flex.sdk.basepath"	value="C:/Users/sascha/Applications/FlexSDK"/>
	<property name="sdk"				value="${flex.sdk.basepath}/${sdk.version}"/>
	<property name="FLEX_HOME"			value="${sdk}"/>
	<property name="path.cfg.flex"		value="${sdk}/frameworks/flex-config.xml"/>
	<property name="path.cfg.air"		value="${sdk}/frameworks/air-config.xml"/>
	<property name="path.buildnumber"	value="bld/build.number"/>
	
	<!-- flextasks definitions -->
	<taskdef resource="flexTasks.tasks" classpath="${sdk}/ant/lib/flexTasks.jar"/>
	
	
	<!-- ==================================================================================== -->
	<!-- TARGETS                                                                              -->
	<!-- ==================================================================================== -->
	
	<target name="Init" description="">
		<echoproperties/>
	</target>
	
	<target name="Clean" description="Cleans the output folder.">
		<clean/>
		<refresh/>
	</target>
	
	
	<target name="Build" description="Builds a distribution version.">
		<prepareBuild/>
		<buildSWC/>
		<refresh/>
	</target>
	
	
	<target name="Pack" description="Creates a zipped version for distribution.">
		<cleanPub/>
		<packDistribution/>
		<refresh/>
	</target>
	
	
	<!-- ==================================================================================== -->
	<!-- MACRODEFS                                                                            -->
	<!-- ==================================================================================== -->
	
	<macrodef name="prepareBuild">
		<sequential>
			<buildnumber file="${path.buildnumber}"/>
			<tstamp>
				<format property="build.date" pattern="dd-MMMM-yyyy HH:mm" unit="minute" locale="en"/>
			</tstamp>
			<echo message="*** ${ant.project.name} version: ${app.version} build #${build.number}, ${build.date} ***" level="info"/>
			<generateAppInfo buildnr="${build.number}" builddate="${build.date}" releasestage="${app.releasestage}"/>
		</sequential>
	</macrodef>
	
	
	<macrodef name="generateAppInfo">
		<attribute name="buildnr" default=""/>
		<attribute name="builddate" default=""/>
		<attribute name="releasestage" default=""/>
		<sequential>
			<echo message="Generating HexagonLib.as ..." level="info"/>
			<echo file="${path.src}/com/hexagonstar/HexagonLib.as" append="false"><![CDATA[/*
 * hexagonlib - Multi-Purpose ActionScript 3 Library.
 *       __    __
 *    __/  \__/  \__    __
 *   /  \__/HEXAGON \__/  \
 *   \__/  \__/  LIBRARY _/
 *            \__/  \__/
 *
 * Licensed under the MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
package com.hexagonstar
{
	/**
	 * Contains constants that describe version information about the library.
	 */
	public class HexagonLib
	{
		//-----------------------------------------------------------------------------------------
		// Constants
		//-----------------------------------------------------------------------------------------
		
		public static const NAME:String				= "${app.name}";
		public static const VERSION:String			= "${app.version}";
		public static const BUILD:String			= "@{buildnr}";
		public static const RELEASE_STAGE:String	= "@{releasestage}";
		public static const DATE:String				= "@{builddate}";
		public static const COPYRIGHT:String		= "${app.copyright}";
	}
}]]>
</echo>
		</sequential>
	</macrodef>
	
	
	<macrodef name="buildSWC">
		<sequential>
			<echo message="Creating hexagonlib SWC ..." level="info"/>
			<compc
				output="${path.bin}/swc/${swc.targetname}"
				target-player="${fpv.version}"
				debug="false"
				optimize="true"
				strict="true">
				<load-config filename="${path.cfg.air}"/>
				<source-path path-element="${path.src}"/>
				<include-sources dir="${path.src}" includes="*"/>
				
				<compiler.library-path dir="${FLEX_HOME}/frameworks/libs/player/10.2" append="false">
					<include name="*.swc"/>
				</compiler.library-path>
				<compiler.library-path dir="${FLEX_HOME}/frameworks/libs" append="false">
					<include name="flex.swc"/>
				</compiler.library-path>
				<compiler.library-path dir="${FLEX_HOME}/frameworks/locale/en_US" append="false">
					<include name="*.swc"/>
				</compiler.library-path>
				
				<compiler.external-library-path dir="${path.swc}" append="true">
					<include name="*.swc"/>
				</compiler.external-library-path>
				
			</compc>
		</sequential>
	</macrodef>
	
	
	<macrodef name="clean">
		<sequential>
			<delete includeemptydirs="true">
				<fileset dir="${path.bin}" includes="**/*" excludes="**/.svn"/>
			</delete>
		</sequential>
	</macrodef>
	
	
	<macrodef name="cleanPub">
		<sequential>
			<delete includeemptydirs="true">
				<fileset dir="${path.pub}" includes="**/*" excludes="**/.svn"/>
			</delete>
		</sequential>
	</macrodef>
	
	
	<macrodef name="packDistribution">
		<sequential>
			<zip destfile="${path.pub}/${app.pubname}_dist.zip"
				basedir="${path.bin}"
				excludes="**/.svn"
				update="false"
				compress="true"/>
		</sequential>
	</macrodef>
	
	
	<macrodef name="refresh">
		<sequential>
			<eclipse.refreshLocal resource="${basedir}" depth="infinite"/>
		</sequential>
	</macrodef>
	
</project>
